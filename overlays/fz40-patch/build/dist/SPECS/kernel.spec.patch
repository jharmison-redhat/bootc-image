--- kernel.spec	2024-08-09 12:48:58.000000000 -0400
+++ kernel.spec	2024-08-29 12:12:47.235439611 -0400
@@ -107,15 +107,9 @@ Summary: The Linux kernel
 %define secure_boot_arch x86_64 aarch64 s390x ppc64le
 %endif

-# Signing for secure boot authentication
-%ifarch %{secure_boot_arch}
-%global signkernel 1
-%else
+# Don't try to sign anything
 %global signkernel 0
-%endif
-
-# Sign modules on all arches
-%global signmodules 1
+%global signmodules 0

 # Compress modules only for architectures that build modules
 %ifarch noarch
@@ -162,7 +156,7 @@ Summary: The Linux kernel
 #  to build the base kernel using the debug configuration. (Specifying
 #  the --with-release option overrides this setting.)
 %define debugbuildsenabled 1
-# define buildid .local
+%define buildid .panasonic
 %define specversion 5.14.0
 %define patchversion 5.14
 %define pkgrelease 427.31.1
@@ -967,6 +961,9 @@ Source4002: gating.yaml
 Patch1: patch-%{patchversion}-redhat.patch
 %endif

+# Panasonic Toughbook programmable macro keys don't exist
+Patch5000: panasonic-programmable-keys.patch
+
 # empty final patch to facilitate testing of kernel patches
 Patch999999: linux-kernel-test.patch

@@ -1696,6 +1693,8 @@ cp -a %{SOURCE1} .
 ApplyOptionalPatch patch-%{patchversion}-redhat.patch
 %endif

+ApplyPatch panasonic-programmable-keys.patch
+
 ApplyOptionalPatch linux-kernel-test.patch

 # END OF PATCH APPLICATIONS
@@ -2123,10 +2122,10 @@ BuildKernel() {
     # Don't build kabi base for debug kernels
     if [ "$Variant" != "zfcpdump" -a "$Variant" != "debug" ]; then
         mkdir -p $RPM_BUILD_ROOT/kabi-dwarf
-        tar xjvf %{SOURCE301} -C $RPM_BUILD_ROOT/kabi-dwarf
+        tar xjvf %{SOURCE301} -C $RPM_BUILD_ROOT/kabi-dwarf --no-same-owner

         mkdir -p $RPM_BUILD_ROOT/kabi-dwarf/stablelists
-        tar xjvf %{SOURCE300} -C $RPM_BUILD_ROOT/kabi-dwarf/stablelists
+        tar xjvf %{SOURCE300} -C $RPM_BUILD_ROOT/kabi-dwarf/stablelists --no-same-owner

         echo "**** GENERATING DWARF-based kABI baseline dataset ****"
         chmod 0755 $RPM_BUILD_ROOT/kabi-dwarf/run_kabi-dw.sh
@@ -2142,10 +2141,10 @@ BuildKernel() {
 %if %{with_kabidwchk}
     if [ "$Variant" != "zfcpdump" ]; then
         mkdir -p $RPM_BUILD_ROOT/kabi-dwarf
-        tar xjvf %{SOURCE301} -C $RPM_BUILD_ROOT/kabi-dwarf
+        tar xjvf %{SOURCE301} -C $RPM_BUILD_ROOT/kabi-dwarf --no-same-owner
         if [ -d "$RPM_BUILD_ROOT/kabi-dwarf/base/%{_target_cpu}${Variant:+.${Variant}}" ]; then
             mkdir -p $RPM_BUILD_ROOT/kabi-dwarf/stablelists
-            tar xjvf %{SOURCE300} -C $RPM_BUILD_ROOT/kabi-dwarf/stablelists
+            tar xjvf %{SOURCE300} -C $RPM_BUILD_ROOT/kabi-dwarf/stablelists --no-same-owner

             echo "**** GENERATING DWARF-based kABI dataset ****"
             chmod 0755 $RPM_BUILD_ROOT/kabi-dwarf/run_kabi-dw.sh
@@ -2934,7 +2933,7 @@ INSTALL_KABI_PATH=$RPM_BUILD_ROOT/lib/mo
 mkdir -p $INSTALL_KABI_PATH

 # install kabi releases directories
-tar xjvf %{SOURCE300} -C $INSTALL_KABI_PATH
+tar xjvf %{SOURCE300} -C $INSTALL_KABI_PATH --no-same-owner
 # with_kernel_abi_stablelists
 %endif

